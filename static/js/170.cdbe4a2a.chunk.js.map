{"version":3,"file":"static/js/170.cdbe4a2a.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","service/config.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieCard = styled.div`\n     display: flex;\n         border-bottom: 1px solid black;\n`;\n\nexport const MovieInfo = styled.div`\n    margin-left: 20px;\n`;\n\nexport const Button = styled.button`\n   display: flex;\n   align-items: center;\n   position: relative;\n   font-size: 14px;\n   border-radius: 3px;\n   color: white;\n   padding: 10px 15px;\n   margin: 15px 0;\n   box-shadow: none;\n   background: #ff541b;\n   cursor: pointer;\n   border: none;\n`;\n\nexport const MoreInfo = styled.ul`\n    list-style: none;\n`;\n\n","import React, { useState, useEffect, Suspense, useRef } from 'react';\nimport { Link, useParams, useLocation, Outlet} from 'react-router-dom';\nimport { fetchMovieDetails } from '../../service/config';\nimport { AiFillLeftCircle } from \"react-icons/ai\";\nimport notfoundphoto from '../image/notfoundphoto.jpg'\n\nimport { MovieCard, MovieInfo, Button, MoreInfo } from \"./MovieDetails.styled\"; \n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: 'black',\n  listStyle: 'none',\n  textTransform: 'uppercase'\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const BackLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const detailsResponse = await fetchMovieDetails(movieId);\n          setMovieDetails(detailsResponse);\n      } catch (error) {\n        console.error('Error fetching movie details', error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  };\n  \n  const genres = movieDetails.genres.map(genre => (\n    <span key={genre.id}>{genre.name}</span>\n  ));\n    \n  return (\n    <div>\n      <Link to={BackLinkLocationRef.current}>\n        <Button>\n          <AiFillLeftCircle /> Go back\n        </Button>\n      </Link>\n      \n      <h1>{movieDetails.title}</h1>\n      <MovieCard>\n      \n        <img\n          src={movieDetails.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`\n            : `${notfoundphoto}`\n          }\n          alt={movieDetails.title}\n        />\n        <MovieInfo>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        \n        </MovieInfo>\n      </MovieCard>\n      <h3>Additional information</h3>\n      <MoreInfo>\n        <li>\n          <Link to=\"cast\" style={linkStyle}>Actors</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" style={linkStyle}>Reviews</Link>\n        </li>\n      </MoreInfo>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n\n\n// import React, { useState, useEffect, Suspense } from 'react';\n// import { Link, useParams, useLocation, Outlet } from 'react-router-dom';\n// import { fetchMovieDetails } from '../../service/config';\n// import { AiFillLeftCircle } from \"react-icons/ai\";\n// import notfoundphoto from '../image/notfoundphoto.jpg'\n// import { MovieCard, MovieInfo, Button, MoreInfo } from \"./MovieDetails.styled\";\n\n// const linkStyle = {\n//   textDecoration: \"none\",\n//   color: 'black',\n//   listStyle: 'none',\n//   textTransform: 'uppercase'\n// };\n\n// const MovieDetails = () => {\n//   const { movieId } = useParams();\n//   const [movieDetails, setMovieDetails] = useState(null);\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     const fetchMovie = async () => {\n//       try {\n//         const detailsResponse = await fetchMovieDetails(movieId);\n//         setMovieDetails(detailsResponse);\n//       } catch (error) {\n//         console.error('Error fetching movie details', error);\n//       }\n//     };\n\n//     fetchMovie();\n//   }, [movieId]);\n\n//   if (!movieDetails) {\n//     return <div>Loading...</div>;\n//   };\n\n//   const genres = movieDetails.genres.map(genre => (\n//     <span key={genre.id}>{genre.name}</span>\n//   ));\n\n//   return (\n//     <div>\n//       {/* <Link to={location.state?.from || '/'}> */}\n//          <Link to={location.state?.from || '/movies'}>Go back</Link>\n//         {/* <Button>\n//           <AiFillLeftCircle /> Go back\n//         </Button> */}\n//       {/* </Link> */}\n\n//       <h1>{movieDetails.title}</h1>\n//       <MovieCard>\n//         <img\n//           src={movieDetails.poster_path\n//             ? `https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`\n//             : `${notfoundphoto}`\n//           }\n//           alt={movieDetails.title}\n//         />\n//         <MovieInfo>\n//           <h3>Overview</h3>\n//           <p>{movieDetails.overview}</p>\n//           <h3>Genres</h3>\n//           <p>{genres}</p>\n//         </MovieInfo>\n//       </MovieCard>\n//       <h3>Additional information</h3>\n//       <MoreInfo>\n//         <li>\n//           <Link to=\"cast\" style={linkStyle}>Actors</Link>\n//         </li>\n//         <li>\n//           <Link to=\"reviews\" style={linkStyle}>Reviews</Link>\n//         </li>\n//       </MoreInfo>\n\n//       <Suspense fallback={<div>Loading...</div>}>\n//         <Outlet />\n//       </Suspense>\n//     </div>\n//   );\n// }\n\n// export default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4cb470234e4a9a78e40f288ec25b93f9';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const HandleMovieSearch = async (movieName) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n}\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieID => {\n  const response = await axios.get(`/movie/${movieID}/reviews?`, params);\n  return response.data.results;\n}"],"names":["MovieCard","styled","_templateObject","_taggedTemplateLiteral","MovieInfo","_templateObject2","Button","_templateObject3","MoreInfo","_templateObject4","linkStyle","textDecoration","color","listStyle","textTransform","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","location","useLocation","BackLinkLocationRef","useRef","state","from","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","detailsResponse","_context","prev","next","fetchMovieDetails","sent","t0","console","error","stop","apply","arguments","_jsx","children","genres","map","genre","name","id","_jsxs","Link","to","current","AiFillLeftCircle","title","src","poster_path","concat","notfoundphoto","alt","overview","style","Suspense","fallback","Outlet","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","_ref2","_callee2","_context2","_x","HandleMovieSearch","_ref3","_callee3","movieName","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","movieID","_context5","_x4"],"sourceRoot":""}