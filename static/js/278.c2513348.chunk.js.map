{"version":3,"file":"static/js/278.c2513348.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","service/config.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { HandleMovieSearch } from '../../service/config';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const [searched, setSearched] = useState(false);\n\n  const updateQueryString = (query) => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSearch = async () => {\n    try {\n      setLoading(true);\n      const response = await HandleMovieSearch(movieName);\n      setSearchResults(response);\n      setSearched(true);\n    } catch (error) {\n      console.error('Error searching movies', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleSearch();\n        }}\n      >\n        <h2>Search for Movies</h2>\n        <input\n          type=\"text\"\n          value={movieName}\n          onChange={(event) => updateQueryString(event.target.value)}\n          placeholder=\"Type here\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {searched && loading ? (\n        <p>Loading...</p>\n      ) : searched && searchResults.length === 0 && movieName ? (\n        <h2>ðŸ”Ž Nothing found</h2>\n      ) : searched && (\n        <div>\n          <ul>\n            {searchResults.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4cb470234e4a9a78e40f288ec25b93f9';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const HandleMovieSearch = async (movieName) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n}\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieID => {\n  const response = await axios.get(`/movie/${movieID}/reviews?`, params);\n  return response.data.results;\n}"],"names":["_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","loading","setLoading","location","useLocation","_useState5","_useState6","searched","setSearched","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","HandleMovieSearch","sent","t0","console","error","finish","stop","apply","arguments","_jsxs","children","onSubmit","event","preventDefault","_jsx","type","value","onChange","query","target","placeholder","length","map","movie","Link","to","concat","id","state","from","title","axios","params","api_key","language","fetchTrendingMovies","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","movieID","_context5","_x4"],"sourceRoot":""}