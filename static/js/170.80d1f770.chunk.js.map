{"version":3,"file":"static/js/170.80d1f770.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","service/config.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieCard = styled.div`\n     display: flex;\n         border-bottom: 1px solid black;\n`;\n\nexport const MovieInfo = styled.div`\n    margin-left: 20px;\n`;\n\nexport const Button = styled.button`\n   display: flex;\n   align-items: center;\n   position: relative;\n   font-size: 14px;\n   border-radius: 3px;\n   color: white;\n   padding: 10px 15px;\n   margin: 15px 0;\n   box-shadow: none;\n   background: #ff541b;\n   cursor: pointer;\n   border: none;\n`;\n\nexport const MoreInfo = styled.ul`\n    list-style: none;\n`;\n\n","import React, { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams, useNavigate, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../service/config';\nimport { AiFillLeftCircle } from \"react-icons/ai\";\n\nimport { MovieCard, MovieInfo, Button, MoreInfo } from \"./MovieDetails.styled\"; \n\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: 'black',\n  listStyle: 'none',\n  textTransform: 'uppercase'\n\n\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n    \n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const detailsResponse = await fetchMovieDetails(movieId);\n          setMovieDetails(detailsResponse);\n      } catch (error) {\n        console.error('Error fetching movie details', error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  };\n  \n  const genres = movieDetails.genres.map(genre => (\n    <span key={genre.id}>{genre.name}</span>\n  ));\n    \n  const handleGoBack = () => {\n    navigate(location.state?.from || '/');\n  };\n\n  return (\n    <div>\n      <Button onClick={handleGoBack}> <AiFillLeftCircle /> Go back</Button>\n     \n      <h1>{movieDetails.title}</h1>\n      <MovieCard>\n      \n        <img\n          src={movieDetails.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`\n            : undefined\n          }\n          alt={movieDetails.title}\n        />\n        <MovieInfo>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        \n        </MovieInfo>\n      </MovieCard>\n      <h3>Additional information</h3>\n      <MoreInfo>\n        <li>\n          <Link to=\"cast\" style={linkStyle}>Actors</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" style={linkStyle}>Reviews</Link>\n        </li>\n      </MoreInfo>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4cb470234e4a9a78e40f288ec25b93f9';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const HandleMovieSearch = async (movieName) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n}\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieID => {\n  const response = await axios.get(`/movie/${movieID}/reviews?`, params);\n  return response.data.results;\n}"],"names":["MovieCard","styled","_templateObject","_taggedTemplateLiteral","MovieInfo","_templateObject2","Button","_templateObject3","MoreInfo","_templateObject4","linkStyle","textDecoration","color","listStyle","textTransform","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","navigate","useNavigate","location","useLocation","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","detailsResponse","_context","prev","next","fetchMovieDetails","sent","t0","console","error","stop","apply","arguments","_jsx","children","genres","map","genre","name","id","_jsxs","onClick","_location$state","state","from","AiFillLeftCircle","title","src","poster_path","concat","undefined","alt","overview","Link","to","style","Suspense","fallback","Outlet","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","_ref2","_callee2","_context2","_x","HandleMovieSearch","_ref3","_callee3","movieName","_context3","_x2","fetchCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","movieID","_context5","_x4"],"sourceRoot":""}